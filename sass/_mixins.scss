
//SELECTED TEXT MIXIN
@mixin selected-text {
    ::-moz-selection {
        background: $selected-text-bgr;
        color: $selected-text-clr;
        text-shadow: none;
    }
    ::selection {
        background: $selected-text-bgr;
        color: $selected-text-clr;
        text-shadow: none;
    }
}

//UNSELECTABLE
@mixin unselectable {
    -moz-user-select: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -o-user-select: none;
    user-select: none;
}

@mixin bfh {
    -webkit-backface-visibility:hidden; /* Chrome, Safari, Opera */
    backface-visibility:hidden;
}

@mixin bfv {
    -webkit-backface-visibility:visible; /* Chrome, Safari, Opera */
    backface-visibility:visible;
}

@mixin fadeout {
    visibility: hidden;
    @include opacity(0);
    @include t(.4s);
    /* hack for ie8 */
    opacity: 1\9;
    visibility: visible\9;
    display: none\9;
    /* hacks for iOS */
    .iOS & {
        opacity: 1;
        visibility: visible;
        display: none;
    }
}
@mixin fadein {
    visibility: visible;
    @include opacity(1);
    /* hacks for ie8 */
    display: block\9;
    /* hacks for iOS */
    .iOS & {
        display: block;
    }
}


//PLACEHOLDER INPUT
@mixin input-placeholder {
    &::-webkit-input-placeholder {
        @content;
    }
    &:-moz-placeholder {
        @content;
    }
    &::-moz-placeholder {
        @content;
    }
    &:-ms-input-placeholder {
        @content;
    }
}

//FONT SIZE IN REM UNIT WITH PIXEL FALLBACK
//USAGE: @include font-size(12px) or @include font-size(12px, "!important") for buttons for example.
@mixin font-size($font-size, $important: "") {
    @if($important == "!important") {
        $important: " !important";  /* add space in front of ! sign */
    }
    font-size: $font-size#{$important};
    font-size: px-rem($font-size)#{$important};
}

@mixin fs($font-size, $important: "") {
    @include font-size($font-size, $important: "");
}

@mixin clear {
    &:before,
    &:after {
        content: " ";
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin box($var) {
    width: $var;
    height: $var;
    display: block;
}
@mixin t($var:.3s) {
    @include transition(all $var ease);
}
@mixin nt {
    @include transition(none);
}

@mixin radius($rad:$radius) {
    @include border-radius($rad);
}

@mixin cover {
    @include background-size(cover);
}

// Borders
@mixin bd { border: 1px solid $border; }
@mixin bdt { border-top: 1px solid $border; }
@mixin bdb { border-bottom: 1px solid $border; }
@mixin bdl { border-left: 1px solid $border; }
@mixin bdr { border-right: 1px solid $border; }



@mixin borders {
    @include border-radius($radius);
    @include background-clip();
    border: 1px solid $border;
}

// hover opacity
@mixin ho($opac) {
    @include trans;

    &:hover {
        @include opacity($opac);
    }
}

// hover color
@mixin hc($color) {
    @include trans;

    &:hover {
        color: $color;
    }
}

// TRIANGLES
@mixin triangles {
    content: '';
    width: 0;
    height: 0;
    display: block;
    border-style: solid;
    position: absolute;
}

@mixin tt($w1, $w2, $clr) {
    @include triangles;
    border-width: 0 $w1 $w2 $w1;
    border-color: transparent transparent $clr transparent;
}
@mixin tb($w1, $w2, $clr) {
    @include triangles;
    border-width: $w2 $w1 0 $w1;
    border-color: $clr transparent transparent transparent;
}
@mixin tr($w1, $w2, $clr) {
    @include triangles;
    border-width: $w1 0 $w1 $w2;
    border-color: transparent transparent transparent $clr;
}
@mixin tl($w1, $w2, $clr) {
    @include triangles;
    border-width: $w1 $w2 $w1 0;
    border-color: transparent $clr transparent transparent;
}

// LINE-HIGH
@mixin lh($line-height) {
    height: $line-height;
    line-height: $line-height;
}

// BOX SIZING
@mixin box-sizing($bs) {
  $bs: unquote($bs);
  @include experimental(box-sizing, $bs, -moz, -webkit, not -o, not -ms, not -khtml, official);
}
@mixin bs {
    @include box-sizing(border-box);
}

// HIDE TEXT
@mixin ht {
    border: 0;
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
    background-color: transparent;
}


//plus icon over element
@mixin plus ($col, $width, $height) {
    &:before, &:after {
        content: '';
        position: absolute;
        background-color: $col;
        z-index: 2;
        width: $width;
        height: $height;
        left: 50%;
        top: 50%;
    }
    &:before {
        margin-left: -($width/2);
        margin-top: -($height/2);
    }
    &:after {
        margin-left: -($height/2);
        margin-top: -($width/2);
    }
}

@mixin img($url) {
    height: image-height($url);
    width: image-width($url);
    @include background(image-url($url, false, false) no-repeat 0 0 cover);
}

//vertical align
@mixin va {
  position: relative;
  top: 50%;
  @include transform(translateY(-50%));
}

//animation mixin

@mixin anim ($delay, $duration, $animation, $function) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-timing-function: $function;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-timing-function: $function;
    -moz-animation-iteration-count: infinite;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-timing-function: $function;
    -o-animation-iteration-count: infinite;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-timing-function: $function;
    animation-iteration-count: infinite;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}


// Breakpoints

@mixin huge {
  @media only screen and (min-width: 1025px) {
    @content;
  }
}
// @include huge {
// }

@mixin large {
  @media only screen and (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}
// @include large {
// }

@mixin medium {
  @media only screen and (min-width: 481px) and (max-width: 768px) {
    @content;
  }
}
// @include medium {
// }

@mixin small {
  @media only screen and (max-width: 480px) {
    @content;
  }
}
// @include small {
// }

